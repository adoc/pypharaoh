###
# SRBB Stack Scaffolding
#   author: https://github.com/adoc
#
# {{project}} Application Development Configuration
###


[composite:main] 
use = call:{{project}}:boot_factory
/ = web 
/api/v1/ = api
/admin/ = admin 


# Use ``paste.deploy.prefix`` to parse web server reverse proxy
#   environment data. "prefix" must match the prefix used in the
#   "composite" section.
[filter:proxy_handle_web]
prefix = /
use = egg:PasteDeploy#prefix

[filter:proxy_handle_admin]
prefix = /admin
use = egg:PasteDeploy#prefix

[filter:proxy_handle_api]
prefix = /api
use = egg:PasteDeploy#prefix


[DEFAULT]
###
#  Application specific Settings
###
url.api = http://127.0.0.1:6543/api/v1/

site.meta.title = SRBB
site.meta.description = SRBB Scaffolding base installation.
site.meta.author = http://github.com/adoc
site.meta.footer = Nicholas Long. All Rights Reserved.

# Date/Time formats.
datetime.date_format = %%Y-%%m-%%d
datetime.time_format = %%I:%%M:%%S%%p
datetime.local_timezone = US/Pacific

# Enable SQLAlchemy and models. 
database.enable = true
# Drop all tables when running the database initialization script.
database.initialize.drop_all = true
database.epoch = 1970-1-1
database.timezone = UTC

# Enable authentication and authorization.
auth.enable = true

# Authentication URI's.
# auth.uri.login = /login
# auth.uri.logout = /logout
# auth.uri.after_logout = /

# Dotted python name for function that is passed a user id
#   (or other identifier) and returns a User object or None.
#   If "authn.models" is disabled, replace this with a function that
#   will return a valid User object.
auth.functions.get_user = {{project}}.models.auth:get_user
auth.functions.get_user_byname = {{project}}.models.auth:get_user_byname
auth.functions.get_user_byemail = {{project}}.models.auth:get_user_byemail

# TODO: Put in to "authn.models" namespace.
# Initialize database with the following values.
# groupname:level
auth.initialize.groups =
    roots:256
    admins:128
    users:8

# username:password:group1[,group2,group3]
auth.initialize.users =
    root:rootpass:roots
    admin:adminpass:roots,admins,users
    user:userpass:users

# Enable authentication database models.
authn.models.enable = true
# Authentication database table names.
authn.models.user.tablename = users
authn.models.group.tablename = groups
authn.models.user_group.tablename = users_groups
# Set an identity secret. (Note: If this is changed, it will revoke
#   authentication for all users. You will have to execute
#   User.set_ident() on all users to recover.)
authn.models.identity.secret = 12345
    #{{auth_identity_secret}}
# This setting will enable the use of the password for identity as well
#   as the username. (If either a username or password changes,
#   authentication for that user is revoked. Note: If this is changed,
#   it will revoke authentication for all users. You will have to
#   execute User.set_ident() on all users to recover.)
authn.models.identity.use_password = true

# Enable authorization models.
authz.models.enable = true
authz.models.permissions.tablename = permissions

# 
# Builtin Principals:
#   __authenticated__ - All authenticated users.
#   
authz.root_factory.permissions =
    allow:roots:__all__
    allow:admins:admin,edit,view,public
    allow:__authenticated__:view,public
    allow:__everyone__:public

###
#  SQLAlchemy Settings
###

sqlalchemy.url = sqlite:///%(here)s/{{project}}.sqlite

# The number of connections to keep open inside the connection pool.
# sqlalchemy.pool_size = 5

# This setting causes the pool to recycle connections after the given
#   number of seconds has passed.
# sqlalchemy.pool_recycle = 3660

# The number of connections to allow in connection pool "overflow",
#   that is connections that can be opened above and beyond the
#   pool_size setting, which defaults to five.
# sqlalchemy.max_overflow = 10


###
#  Auth TKT Settings
###

# The secret used for auth_tkt cookie signing. This value
#   should be unique across all values provided to Pyramid for various
#   subsystem secrets.
auth_tkt.secret = 12345
    # {{dev_auth_tkt_secret}}

# The cookie name used.
# auth_tkt.cookie_name = auth_{{project}}

# Only send the cookie back over a secure connection.
# auth_tkt.secure = true

# Make the requesting IP address part of the authentication data in the
#   cookie. (Auth_tkt has no IPv6 specification.)
# auth_tkt.include_ip = true

# Maximum number of seconds which a newly issued ticket will be
#   considered valid. (1200s = 20m)
auth_tkt.timeout = 1200

# The number of seconds that must pass before an authentication token
#   cookie is automatically reissued as the result of a request which
#   requires authentication. (120s = 2m)
auth_tkt.reissue_time = 120

# The max age of the auth_tkt cookie, in seconds.
# auth_tkt.max_age =

# The path for which the auth_tkt cookie is valid. May be desirable if
#   the application only serves part of a domain. 
# auth_tkt.path = /prefix

# Hide cookie from JavaScript by setting the HttpOnly flag. Not honored
#   by all browsers.
# auth_tkt.http_only = true

# An auth_tkt cookie will be generated for the wildcard domain. If your
#   site is hosted as example.com this will make the cookie available for
#   sites underneath example.com such as www.example.com.
# auth_tkt.wild_domain = false

# An auth_tkt cookie will be generated for the parent domain of the
#   current site. For example if your site is hosted under
#   www.example.com a cookie will be generated for .example.com.
# auth_tkt.parent_domain = true

# If provided the auth_tkt cookie will only be set for this domain.
#   This option is not compatible with wild_domain and parent_domain.
# auth_tkt.domain =

# Hash algorithm used to sign the auth ticket. 
auth_tkt.hashalg = sha512


[app:api]
use = call:{{project}}.api:main
filter-with = proxy_handle_api

pyramid.default_locale_name = en
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false

pyramid.includes =
    pyramid_debugtoolbar
    pyramid_tm

messaging.enable = true


[app:admin]
use = call:{{project}}.admin:main
filter-with = proxy_handle_admin

pyramid.default_locale_name = en
pyramid.reload_templates = true
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false

pyramid.includes =
    pyramid_debugtoolbar
    pyramid_tm
    pyramid_mako
    pyramid_beaker

mako.directories = {{project}}.admin:templates

mako.imports = 
    import json
    import datetime

static.mapping =
    static|{{project}}:static/|0
    assets|{{project}}.admin:assets/|0
static.serve = true

auth.allow_email_login = true

auth.renderer.login = login.html_mako

auth.uri.login = /login
auth.uri.logout = /logout
auth.uri.after_logout = /

beaker.session.type = memory
beaker.session.secret = {{beaker_session_secret}}
beaker.session.key = {{project}}_session

# Enable common.js and config.js.
base_js.enable = true
base_js.prefix = /
base_js.minify = false
base_js.cache_max_age = 0
base_js.permission = admin
base_js.template.common =
base_js.template.config =

[app:web]
use = call:{{project}}.web:main
filter-with = proxy_handle_web

pyramid.default_locale_name = en
pyramid.reload_templates = true
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false

pyramid.includes =
    pyramid_debugtoolbar
    pyramid_tm
    pyramid_mako
    pyramid_beaker

robots.cache_max_age = 0
robots.txt =
    User-agent: *
    Disallow: /api/
    Disallow: /admin/
    Disallow: /static/
    Disallow: /login
    Disallow: /logout

mako.directories = {{project}}.web:templates

mako.imports = 
    import json
    import datetime

auth.allow_email_login = true

auth.renderer.login = login.html_mako

auth.uri.login = /login
auth.uri.logout = /logout
auth.uri.after_logout = /

beaker.session.type = memory
beaker.session.secret = {{beaker_session_secret}}
beaker.session.key = {{project}}_session

# uri|directory|cache_max_age
static.mapping =
    static|{{project}}:static/|0
    assets|{{project}}.web:assets/|0
static.serve = true

# Enable common.js and config.js.
base_js.enable = true
base_js.prefix = /
base_js.minify = false
base_js.cache_max_age = 0
base_js.permission = public
base_js.template.common =
base_js.template.config =



#######


# By default, the toolbar only appears for clients from IP addresses
# '127.0.0.1' and '::1'.
# debugtoolbar.hosts = 127.0.0.1 ::1


[server:main]
use = egg:waitress#main
host = 0.0.0.0
port = 6543


###
#  logging configuration
#  http://docs.pylonsproject.org/projects/pyramid/en/{{pyramid_docs_branch}}/narr/logging.html
###

[loggers]
keys = root, {{package_logger}}, sqlalchemy

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_{{package_logger}}]
level = DEBUG
handlers =
qualname = {{package}}

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s:%(lineno)s][%(threadName)s] %(message)s