###
# {{project}} Application Development Configuration
# SRBB Stack
###

[app:main]
use = egg:{{project}}

pyramid.reload_templates = true
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en
pyramid.includes =
    pyramid_debugtoolbar
    pyramid_tm
    pyramid_mako

mako.imports = 
    import json


###
#  Application Specific Settings
###

# Date/Time formats.
datetime.date_format = %%Y-%%m-%%d
datetime.time_format = %%I:%%M:%%S%%p

# Enable SQLAlchemy and models. 
database.enable = true
database.epoch = 1970-1-1
database.timezone = UTC

# Enable authentication and authorization.
auth.enable = true
# Dotted python name for function that is passed a user id
#   (or other identifier) and returns a User object or None.
#   If "authn.models" is disabled, replace this with a function that
#   will return a valid User object.
auth.get_user_func = core.models.auth.get_user

# Enable authentication models.
authn.models.enable = true
authn.models.user.tablename = users
authn.models.group.tablename = groups
authn.models.user_group.tablename = users_groups

# Enable authorization models.
authz.models.enable = true
authz.models.permissions.tablename = permissions


###
#  SQLAlchemy Settings
###

sqlalchemy.url = sqlite:///%(here)s/{{project}}.sqlite

# The number of connections to keep open inside the connection pool.
sqlalchemy.pool_size = 5

# This setting causes the pool to recycle connections after the given
#   number of seconds has passed.
sqlalchemy.pool_recycle = 3660

# The number of connections to allow in connection pool “overflow”,
#   that is connections that can be opened above and beyond the
#   pool_size setting, which defaults to five.
sqlalchemy.max_overflow = 10


###
#  Auth TKT Settings
###

# The secret used for auth_tkt cookie signing. This value
#   should be unique across all values provided to Pyramid for various
#   subsystem secrets.
auth_tkt.secret = {{dev_auth_tkt_secret}}

# The cookie name used.
# auth_tkt.cookie_name = auth_{{project}}

# Only send the cookie back over a secure connection.
# auth_tkt.secure = true

# Make the requesting IP address part of the authentication data in the
#   cookie. (Auth_tkt has no IPv6 specification.)
# auth_tkt.include_ip = true

# Maximum number of seconds which a newly issued ticket will be
#   considered valid. (1200s = 20m)
auth_tkt.timeout = 1200

# The number of seconds that must pass before an authentication token
#   cookie is automatically reissued as the result of a request which
#   requires authentication. (120s = 2m)
auth_tkt.reissue_time = 120

# The max age of the auth_tkt cookie, in seconds.
# auth_tkt.max_age =

# The path for which the auth_tkt cookie is valid. May be desirable if
#   the application only serves part of a domain. 
# auth_tkt.path = /prefix

# Hide cookie from JavaScript by setting the HttpOnly flag. Not honored
#   by all browsers.
# auth_tkt.http_only = true

# An auth_tkt cookie will be generated for the wildcard domain. If your
#   site is hosted as example.com this will make the cookie available for
#   sites underneath example.com such as www.example.com.
# auth_tkt.wild_domain = false

# An auth_tkt cookie will be generated for the parent domain of the
#   current site. For example if your site is hosted under
#   www.example.com a cookie will be generated for .example.com.
# auth_tkt.parent_domain = true

# If provided the auth_tkt cookie will only be set for this domain.
#   This option is not compatible with wild_domain and parent_domain.
# auth_tkt.domain =

# Hash algorithm used to sign the auth ticket. 
auth_tkt.hashalg = sha512



static_dir = {{project}}:static/

cache_max_age = 0

# By default, the toolbar only appears for clients from IP addresses
# '127.0.0.1' and '::1'.
# debugtoolbar.hosts = 127.0.0.1 ::1


# Simple hack to properly handle client_addr for reverse proxied clients.
filter-with = proxy-prefix

[filter:proxy-prefix]
use = egg:PasteDeploy#prefix
prefix = /


[server:main]
use = egg:waitress#main
host = 0.0.0.0
port = 6543


###
#  logging configuration
#  http://docs.pylonsproject.org/projects/pyramid/en/{{pyramid_docs_branch}}/narr/logging.html
###

[loggers]
keys = root, {{package_logger}}, sqlalchemy

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_{{package_logger}}]
level = DEBUG
handlers =
qualname = {{package}}

[logger_sqlalchemy]
level = INFO
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s:%(lineno)s][%(threadName)s] %(message)s